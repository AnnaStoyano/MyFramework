{"version":3,"sources":["framework/element.js","framework/render.js","data/currentState.js","data/helper.js","components/SwitchItem/SwitchItem.js","components/SwitchItem/index.js","components/SwitchCharacters/SwitchCharacters.js","components/SwitchCharacters/index.js","components/SearchByName/SearchByName.js","components/SearchByName/index.js","data/charactersData.js","data/displayPopUp.js","utils.js","components/CharacterCard/CharacterCard.js","components/CharacterCard/index.js","components/CharactersResult/CharactersResult.js","components/CharactersResult/index.js","components/PopUp/PopUp.js","components/PopUp/index.js","components/DisplayResult/DisplayResult.js","components/DisplayResult/index.js","components/App.js","index.js"],"names":["createElement","tag","props","children","element","DocumentFragment","document","Object","entries","forEach","name","value","startsWith","toLowerCase","window","addEventListener","substr","includes","removeAttribute","setAttribute","e","console","error","child","appendChild","parent","Array","isArray","subChild","nodeType","createTextNode","toString","createFragment","Component","Target","renderApp","componentFunction","targetElement","innerHTML","currentState","currentCharacters","currentSearch","isDataLoading","characters","currentDisplayCharacters","activeCard","switchCharactersRadio","event","switchTarget","target","previousElementSibling","searchByName","characterName","trim","filterCharactersByWork","filter","character","hogwartsStaff","closeModal","SwitchItem","id","style","switchInput","switchLabel","SwitchCharacters","switches","switchesDOM","map","switchItem","switchWrapper","Search","searchWrapper","validateAndLoadData","length","fetch","then","res","json","data","Promise","resolve","performDisplayCharacters","err","catch","displayPopUp","targetCard","closest","find","item","getAttribute","getSecurityURL","url","urlLetters","split","splice","join","getMoreDatails","obj","exceptArr","details","key","CharacterCard","image","displayCharactersCard","top","CharactersResult","content","charactersListItems","displayCharacters","PopUp","species","gender","house","dateOfBirth","ancestry","actor","alive","moreInfo","characterInfo","DisplayResult","App","module","hot","accept","querySelector"],"mappings":"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","file":"src.47d92d30.js","sourceRoot":"..\\src","sourcesContent":["/**\n * Creates DOM Node. Implements jsx-parser's createElement API\n * @param {string|Function} tag - HTML tag as string or Component function\n * @param {object} props - element properties as parsed by jsx-parser\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment|Element}\n */\nexport const createElement = (tag, props, ...children) => {\n  if (typeof tag === 'function') {\n    return tag(\n      {\n        ...props,\n        children,\n      },\n      children,\n    );\n  }\n  const element = tag === '' ? new DocumentFragment() : document.createElement(tag);\n  Object.entries(props || {}).forEach(([name, value]) => {\n    if (name.startsWith('on') && name.toLowerCase() in window) {\n      element.addEventListener(\n        name.toLowerCase().substr(2),\n        /** @type {Function} */\n        value,\n      );\n    } else {\n      try {\n        if (!(element instanceof DocumentFragment)) {\n          if (['disabled', 'checked'].includes(name) && !value) {\n            element.removeAttribute(name);\n          } else {\n            element.setAttribute(name, value);\n          }\n        }\n      } catch (e) {\n        console.error('createElement caught', e, 'on', element);\n      }\n    }\n  });\n\n  children.forEach(child => appendChild(element, child));\n\n  return element;\n};\n\n/**\n * Appends child elements from an unbound array of children, recursively\n * @param {Node} parent\n * @param {Node|[Node]} child\n */\nconst appendChild = (parent, child) => {\n  if (Array.isArray(child)) {\n    child.forEach(subChild => appendChild(parent, subChild));\n  } else {\n    if (child != null) {\n      parent.appendChild(child.nodeType ? child : document.createTextNode(child.toString()));\n    }\n  }\n};\n\n/**\n * Creates Fragment. Implements jsx-parser's createFragment API\n * @param {object} props - effectively a placeholder, fragment never has any properties\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment}\n */\nexport const createFragment = (props, ...children) => createElement('', props, ...children);\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from './element';\n\nlet Component, Target;\n\nexport default function renderApp(componentFunction = null, targetElement = null) {\n  if (componentFunction) Component = componentFunction;\n  if (targetElement) Target = targetElement;\n  Target.innerHTML = '';\n  Target.appendChild(<Component />);\n}\n","const currentState = {\n  currentCharacters: 'all',\n  currentSearch: '',\n  isDataLoading: false,\n  error: null,\n  characters: [],\n  currentDisplayCharacters: [],\n  activeCard: null,\n};\n\nexport default currentState;\n","import renderApp from '../framework/render';\n\nexport function switchCharactersRadio(event) {\n  const switchTarget = event.target.previousElementSibling;\n  if (switchTarget && switchTarget.value != window.currentState.currentCharacters) {\n    window.currentState.currentCharacters = switchTarget.value;\n    renderApp();\n  }\n}\n\nexport function searchByName(characterName) {\n  if (characterName != window.currentState.currentSearch) {\n    window.currentState.currentSearch = characterName.trim().toLowerCase();\n    renderApp();\n  }\n}\n\nexport function filterCharactersByWork() {\n  if (window.currentState.currentCharacters == 'staff') {\n    return window.currentState.characters.filter(character => character.hogwartsStaff == true);\n  } else if (window.currentState.currentCharacters == 'students') {\n    return window.currentState.characters.filter(character => character.hogwartsStaff == false);\n  } else {\n    return window.currentState.characters;\n  }\n}\n\nexport function closeModal() {\n  window.currentState.activeCard = null;\n  renderApp();\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport style from './SwitchItem.css';\n\nexport default function SwitchItem(value, id) {\n  return (\n    <>\n      <input\n        type=\"radio\"\n        name=\"switchDisplay\"\n        value={value}\n        id={id}\n        checked={window.currentState.currentCharacters == value ? true : false}\n        class={style.switchInput}\n      />\n      <label For={id} class={style.switchLabel}>\n        {value}\n      </label>\n    </>\n  );\n}\n","export { default } from './SwitchItem';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport { switchCharactersRadio } from '../../data/helper';\nimport style from './SwitchCharacters.css';\nimport SwitchItem from '../SwitchItem';\n\nexport default function SwitchCharacters() {\n  const switches = [\n    {\n      id: 'switch-all',\n      value: 'all',\n    },\n    {\n      id: 'switch-students',\n      value: 'students',\n    },\n    {\n      id: 'switch-staff',\n      value: 'staff',\n    },\n  ];\n\n  const switchesDOM = switches.map(switchItem => SwitchItem(switchItem.value, switchItem.id));\n\n  return (\n    <div id=\"switch-wrapper\" class={style.switchWrapper} onclick={e => switchCharactersRadio(e)}>\n      {' '}\n      {switchesDOM}{' '}\n    </div>\n  );\n}\n","export { default } from './SwitchCharacters';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport { searchByName } from '../../data/helper';\nimport style from './SearchByName.css';\n\nexport default function Search() {\n  return (\n    <div class={style.searchWrapper}>\n      <label For=\"search\">Enter name: </label>\n      <input\n        type=\"text\"\n        id=\"search\"\n        value={window.currentState.currentSearch}\n        onchange={e => searchByName(e.target.value)}\n      />\n    </div>\n  );\n}\n","export { default } from './SearchByName';\n","import renderApp from '../framework/render';\n\nexport function validateAndLoadData() {\n  const API_URL = 'https://hp-api.herokuapp.com/api/characters';\n  if (window.currentState.characters.length <= 0) {\n    return fetch(API_URL)\n      .then(res => res.json())\n      .then(data => ({\n        data,\n      }));\n  }\n  return Promise.resolve(window.currentState.characters);\n}\n\nexport function performDisplayCharacters() {\n  window.currentState.isDataLoading = true;\n  window.currentState.error = null;\n  validateAndLoadData()\n    .then(({ err, data }) => {\n      window.currentState.isDataLoading = false;\n\n      if (err) {\n        window.currentState.error = err;\n      } else if (data) {\n        window.currentState.characters = data;\n        renderApp();\n      }\n    })\n    .catch(() => {\n      window.currentState.error = 'ERROR';\n    });\n}\n","import renderApp from '../framework/render';\n\nexport default function displayPopUp(target) {\n  const targetCard = target.closest('div[aria-label]');\n  if (targetCard) {\n    const activeCard = window.currentState.currentDisplayCharacters.find(\n      item => item.name == targetCard.getAttribute('aria-label'),\n    );\n    window.currentState.activeCard = activeCard;\n    renderApp();\n  }\n}\n","export function getSecurityURL(url) {\n  const urlLetters = url.split('');\n  urlLetters.splice(4, 0, 's');\n  return urlLetters.join('');\n}\n\nexport function getMoreDatails(obj, exceptArr) {\n  let details = '';\n  for (let key in obj) {\n    if (!exceptArr.includes(key)) {\n      let value = obj[key];\n      if (value == '') {\n        value = '-';\n      }\n      details += `${key}: ${value}<br>`;\n    }\n  }\n  return details;\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport style from './CharacterCard.css';\nimport { getSecurityURL } from '../../utils';\n\nexport default function CharacterCard({ name, image }) {\n  return (\n    <div class={style.displayCharactersCard} aria-label={name}>\n      <div class={style.top}>\n        <img src={getSecurityURL(image)} />\n      </div>\n      <p>{name}</p>\n    </div>\n  );\n}\n","export { default } from './CharacterCard';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { performDisplayCharacters } from '../../data/charactersData';\nimport { createElement, createFragment } from '../../framework/element';\nimport displayPopUp from '../../data/displayPopUp';\nimport { filterCharactersByWork } from '../../data/helper';\nimport CharacterCard from '../CharacterCard';\nimport style from './CharactersResult.css';\n\nexport default function CharactersResult() {\n  performDisplayCharacters();\n  const { currentSearch, characters, error, isDataLoading } = window.currentState;\n  let content = '';\n  if (isDataLoading) {\n    content = 'Data Loading...';\n  }\n\n  if (error != null) {\n    content = window.currentState.error;\n  }\n\n  if (characters.length > 0) {\n    window.currentState.currentDisplayCharacters = filterCharactersByWork().filter(item =>\n      item.name.toLowerCase().startsWith(currentSearch),\n    );\n\n    const charactersListItems = window.currentState.currentDisplayCharacters.map(character => (\n      <CharacterCard name={character.name} image={character.image} />\n    ));\n\n    content = (\n      <div\n        id=\"displayCharacters\"\n        class={style.displayCharacters}\n        onclick={e => displayPopUp(e.target)}\n      >\n        <ul>{charactersListItems}</ul>\n      </div>\n    );\n  }\n  return <div>{content}</div>;\n}\n","export { default } from './CharactersResult';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport { closeModal } from '../../data/helper';\nimport style from './PopUp.css';\nimport { getSecurityURL } from '../../utils';\n\nexport default function PopUp({\n  name,\n  image,\n  species,\n  gender,\n  house,\n  dateOfBirth,\n  ancestry,\n  actor,\n  alive,\n}) {\n  return (\n    <div id=\"moreInfo\" class={style.moreInfo}>\n      <div aria-label={name} class={('top', style.top)}>\n        <img src={getSecurityURL(image)} />\n      </div>\n      <p class={style.characterName}>{name}</p>\n      <div class={style.characterInfo}>\n        <p>Species: {species}</p>\n        <p>Gender: {gender}</p>\n        <p>Date of Birth: {dateOfBirth}</p>\n        <p>House: {house}</p>\n        <p>Ancestry: {ancestry}</p>\n        <p>Alive: {alive ? '+' : '-'}</p>\n        <p>Actor: {actor}</p>\n      </div>\n      <button onclick={() => closeModal()}>x</button>\n    </div>\n  );\n}\n","export { default } from './PopUp';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\n\nimport CharactersResult from '../CharactersResult';\nimport PopUp from '../PopUp';\n\nexport default function DisplayResult({ activeCard = null }) {\n  return (\n    <>\n      <CharactersResult />\n      {activeCard ? <PopUp {...activeCard} /> : null}\n    </>\n  );\n}\n","export { default } from './DisplayResult';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\nimport SwitchCharacters from './SwitchCharacters';\nimport SearchByName from './SearchByName';\nimport DisplayResult from './DisplayResult';\n\nexport default function App() {\n  return (\n    <>\n      <SwitchCharacters />\n      <SearchByName />\n      <DisplayResult activeCard={window.currentState.activeCard} />\n    </>\n  );\n}\n","import renderApp from './framework/render';\nimport currentState from './data/currentState';\nimport App from './components/App';\n\nif (module.hot) {\n  module.hot.accept();\n}\n\nwindow.currentState = currentState;\n\nrenderApp(App, document.querySelector('#app-root'));\n"]}